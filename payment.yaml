- name: Installing and Configuring payment Module
  hosts: payment
  become: yes
  tasks:
    - name: Install python36 gcc python3-devel 
      ansible.builtin.yum:
        name: "{{item}}" 
        state: present
      - loop:
          - python36
          - gcc
          - python3-devel 
    
    - name: Verify and add user if doesn't exist already
      ansible.builtin.command: id roboshop
      register: exitstatus
      ignore_errors: yes

    - when: exitstatus.rc != 0
      name: add user
      ansible.builtin.user:
        name: roboshop
    
    - name: verify and add /app directory if doesn't exist already
      ansible.builtin.stat:
        path: /app
      register: dirstatus
      ignore_errors: yes
    
    - when: dirstatus.stat.exists == false
      name: add /app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download the application code to created app directory.
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/payment.zip
        dest: /tmp/payment.zip
        
    - name: unzipping cart.zip
      ansible.builtin.unarchive:
        src: /tmp/payment.zip
        dest: /app
        remote_src: yes

    - name: download the dependencies.
      ansible.builtin.command: pip3.6 install -r requirements.txt
      args:
        chdir: /app
    
    - name: Set SystemD payment Service
      ansible.builtin.copy:
        src: payment.service
        dest: /etc/systemd/system/payment.service
    
    - name: Load the service.
      ansible.builtin.systemd:
        daemon-reload: true

    - name: Enable and Start payment service
      ansible.builtin.service:
        name: payment    
        state: started
        enabled: true

 
 




