- name: installing and configuring dispatch module
  hosts: dispatch
  become: yes
  tasks:
    - name: install golang
      ansible.builtin.yum:
        name: golang
        state: present

    - name: Verify and add user if doesn't exist
      ansible.builtin.command: id roboshop
      register: exitstatus
      ignore_errors: yes
    
    - when: exitstatus.rc != 0
      name: add user
      ansible.builtin.user:
        name: roboshop

    - name: verify and add /app directory if doesn't exists
      ansible.builtin.stat:
        path: /app
      register: dirstatus
      ignore_errors: yes
    
    - when: dirstatus.stat.exists == false
      name: add /app directory
      ansible.builtin.file:
        path: /app
        state: directory
    
    - name: Download the application code to created app directory.
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/dispatch.zip
        dest: /tmp/dispatch.zip 

    - name: unarchive dispatch.zip
      ansible.builtin.unarchive:
        src: /tmp/dispatch.zip 
        dest: /app
        remote_src: yes

    - name: download the dependencies.
      ansible.builtin.command: "{{item}}"
      args: 
        chdir: /app
      loop:
      - go mod init dispatch
      - go get 
      - go build


    - name: Setup SystemD dispatch Service
      ansible.builtin.copy:
        src: dispatch.service
        dest: /etc/systemd/system/dispatch.service

    - name: Load the service.
      ansible.builtin.systemd:
        daemon-reload: true

    - name: enable and start the service
      ansible.builtin.service:
        name: dispatch
        state: started
        enabled: true