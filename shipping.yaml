- name: installing and configuring shipping module
  hosts: shipping
  become: yes
  tasks:
    - name: install maven
      ansible.builtin.yum:
        name: maven
        state: present

    - name: Verify and add user if doesn't exist
      ansible.builtin.command: id roboshop
      register: exitstatus
      ignore_errors: yes
    
    - when: exitstatus.rc != 0
      name: add user
      ansible.builtin.user:
        name: roboshop

    - name: verify and add /app directory if doesn't exists
      ansible.builtin.stat:
      register: dirstatus
      ignore_errors: yes

    - when: dirstatus.stat.exists == false
      name: add /app directory
      ansible.builtin.file:
        path: /app
        state: directory
    
    - name: Download the application code to created app directory.
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp/shipping.zip 

    - name: unarchive shipping.zip
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: Setup SystemD Shipping Service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: Load the service.
      ansible.builtin.systemd:
        daemon-reload: true

    - name: enable and start the service
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: true

    - name: install mysql client.
      ansible.builtin.yum:
        name: mysql
        state: present
    
    - name: Load Schema
      ansible.builtin.command: mysql -h mysql.robokart.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

    - name: Restart the Service
      ansible.builtin.service:
        name: shippings
        state: restarted
    